{"version":3,"sources":["components/PostCard.tsx","App.tsx","index.tsx"],"names":["PostCard","name","avatar","description","className","src","alt","style","width","App","useState","posts","setPosts","setName","setAvatar","setDescription","marginTop","action","onSubmit","event","preventDefault","newPost","id","length","prevPost","addPost","placeholder","type","value","onChange","target","required","map","post","slice","reverse","ReactDOM","render","document","getElementById"],"mappings":"8KAQaA,EAA4B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACxD,OACE,0BAASC,UAAU,QAAnB,UACE,wBAAQA,UAAU,aAAlB,SACE,mBAAGA,UAAU,iBAAb,SACE,qBACEA,UAAU,aACVC,IAAKH,EACLI,IAAI,eAIV,qBAAKF,UAAU,gBAAgBG,MAAO,CAAEC,MAAO,OAA/C,SACE,qBAAKJ,UAAU,UAAf,SACE,8BACE,iCAASH,IACT,uBACCE,aCrBAM,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOT,EAAP,KAAaY,EAAb,KACA,EAA4BH,mBAAS,IAArC,mBAAOR,EAAP,KAAeY,EAAf,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOP,EAAP,KAAoBY,EAApB,KAgBA,OACE,qBAAKX,UAAU,YAAYG,MAAO,CAAES,UAAW,QAA/C,SACE,uBAAMZ,UAAU,UAAhB,UACE,sBAAKA,UAAU,iBAAf,UACE,uBACEa,OAAO,IACPC,SAAU,SAACC,GACTA,EAAMC,iBArBF,WACd,IAAMC,EAAU,CACdC,GAAIX,EAAMY,OACVtB,OACAC,SACAC,eAGFS,GAAS,SAAAY,GAAQ,4BAAQA,GAAR,CAAkBH,OACnCR,EAAQ,IACRC,EAAU,IACVC,EAAe,IAWLU,IAJJ,UAOE,uBACErB,UAAU,kBACVsB,YAAY,sBACZC,KAAK,OACLC,MAAO3B,EACP4B,SAAU,SAACV,GACTN,EAAQM,EAAMW,OAAOF,QAEvBG,UAAQ,IAEV,uBACE3B,UAAU,kBACVsB,YAAY,uHACZC,KAAK,OACLC,MAAO1B,EACP2B,SAAU,SAACV,GACTL,EAAUK,EAAMW,OAAOF,QAEzBG,UAAQ,IAEV,0BACE3B,UAAU,WACVsB,YAAY,gEACZE,MAAOzB,EACP0B,SAAU,SAACV,GACTJ,EAAeI,EAAMW,OAAOF,QAE9BG,UAAQ,IAEV,wBACE3B,UAAU,+BACVuB,KAAK,SACLpB,MAAO,CAAES,UAAW,QAHtB,oBAQF,qBACEZ,UAAU,YACVG,MAAO,CAAES,UAAW,QAFtB,SAIGL,EAAMqB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEhC,KAAMgC,EAAKhC,KACXC,OAAQ+B,EAAK/B,OACbC,YAAa8B,EAAK9B,aAHb8B,EAAKX,YAQlB,8BACGX,EAAMuB,OAAO,GAAGC,UAAUH,KAAI,SAACC,GAAD,OAC7B,cAAC,EAAD,CAEEhC,KAAMgC,EAAKhC,KACXC,OAAQ+B,EAAK/B,OACbC,YAAa8B,EAAK9B,aAHb8B,EAAKX,eCrFxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99067498.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n  avatar: string,\n  description: string,\n};\n\nexport const PostCard: React.FC<Props> = ({ name, avatar, description }) => {\n  return (\n    <article className=\"media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-64x64\">\n          <img\n            className=\"is-rounded\"\n            src={avatar}\n            alt=\"avatar\"\n          />\n        </p>\n      </figure>\n      <div className=\"media-content\" style={{ width: '50%' }}>\n        <div className=\"content\">\n          <p>\n            <strong>{name}</strong>\n            <br />\n            {description}\n          </p>\n        </div>\n\n      </div>\n    </article>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/bulma.sass';\nimport { PostCard } from './components/PostCard';\n\nexport const App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [name, setName] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [description, setDescription] = useState('');\n\n  const addPost = () => {\n    const newPost = {\n      id: posts.length,\n      name,\n      avatar,\n      description,\n    };\n\n    setPosts(prevPost => [...prevPost, newPost]);\n    setName('');\n    setAvatar('');\n    setDescription('');\n  };\n\n  return (\n    <div className=\"container\" style={{ marginTop: '50px' }}>\n      <main className=\"columns\">\n        <div className=\"column is-half\">\n          <form\n            action=\"#\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              addPost();\n            }}\n          >\n            <input\n              className=\"input is-normal\"\n              placeholder=\"Ім'я\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => {\n                setName(event.target.value);\n              }}\n              required\n            />\n            <input\n              className=\"input is-normal\"\n              placeholder=\"Посилання на аватарку\"\n              type=\"text\"\n              value={avatar}\n              onChange={(event) => {\n                setAvatar(event.target.value);\n              }}\n              required\n            />\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Текст посту\"\n              value={description}\n              onChange={(event) => {\n                setDescription(event.target.value);\n              }}\n              required\n            />\n            <button\n              className=\"button is-primary is-rounded\"\n              type=\"submit\"\n              style={{ marginTop: '20px' }}\n            >\n              Add\n            </button>\n          </form>\n          <div\n            className=\"container\"\n            style={{ marginTop: '50px' }}\n          >\n            {posts.map((post) => (\n              <PostCard\n                key={post.id}\n                name={post.name}\n                avatar={post.avatar}\n                description={post.description}\n              />\n            ))}\n          </div>\n        </div>\n        <div>\n          {posts.slice(-5).reverse().map((post) => (\n            <PostCard\n              key={post.id}\n              name={post.name}\n              avatar={post.avatar}\n              description={post.description}\n            />\n          ))}\n        </div>\n      </main>\n    </div>\n\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}